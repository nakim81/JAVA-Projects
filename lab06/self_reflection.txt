You must answer at least 4 questions, but the remaining ones are optional. The main goal of this file is to get you thinking critically about your own work, but we will also use these self reflections at the end of the semester when we do our internal review of the course.

ArrayDeque:

Q: Give an example of at least one idea from the staff solution that would have made your solution better (if any).

A: Using get method in resize method, instead of calculating for newIndex and using it.

Q: What's something you felt proud of in your code, if anything?

A: RemoveLast, removeFirst, resize, and addFirst/Last. I put a lot of time to complete those methods and I am truly proud
   of those codes.

Q: What's something that was particularly inelegant in your code, if anything?

A: addFirst and addLast. I could simplify the conditional statements by taking out common parts. I don't know why I didn't
   do that

Q: What did you learn by talking to your partner about writing ArrayDeque?

A: ArrayDeque was really complicated. We pulled an all-nighter to finish this assignment. Compared to linkedListDeque,
   there were more various approaches to write each method.

Q: What do you wish you would have known before writing ArrayDeque, if anything?

A: Tracking two index for one array was a lot harder than I thought. I should've read the slides and study the algorithm.

Q: If you wrote ArrayDeque again, what would you do differently, if anything?

A: I would do the same.

-----

LinkedListDeque:

Q: Give an example of at least one idea from the staff solution that would have made your solution better (if any).

A: I could have simply put sentinel.next instead of declaring Node n when calling helper for getRecursive method.

Q: What's something you felt proud of in your code, if anything?

A: get method because I think that method is pretty simple and cool.

Q: What's something that was particularly inelegant in your code, if anything?

A: I think there is no particularly inelegant part since the codes for linkedListDeque were relatively simple.

Q: What did you learn by talking to your partner about writing LinkedListDeque?

A: LinkedListDeque was a lot simpler than the arraydeque part. Logic and approach of my partner were pretty similar with
   mine

Q: What do you wish you would have known before writing LinkedListDeque, if anything?

A: The lecture and the slides were enough for this assignment.

Q: If you wrote LinkedListDeque again, what would you do differently, if anything?

A: I would write the same as before.

-----

Meta:

Q: Did you like this design review process? Anything we should do differently next time?

A: Everything was good :)
